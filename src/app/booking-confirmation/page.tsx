'use client';

import { useState, useEffect } from 'react';
import { useRouter } from 'next/navigation';
import Link from 'next/link';
import Button from '@/components/ui/Button';
import Card from '@/components/ui/Card';

interface BookingInfo {
  slot: {
    id: number;
    start_time: string;
    end_time: string;
    is_scheduled: boolean;
    message?: string;
    whisper_room_type: string;
    client: number;
  };
  method: string;
  message?: string;
}

export default function BookingConfirmationPage() {
  const [bookingInfo, setBookingInfo] = useState<BookingInfo | null>(null);
  const [loading, setLoading] = useState(true);
  const router = useRouter();

  useEffect(() => {
    // L·∫•y th√¥ng tin booking t·ª´ localStorage
    const storedBookingInfo = localStorage.getItem('booking_info');
    
    if (!storedBookingInfo) {
      // N·∫øu kh√¥ng c√≥ th√¥ng tin booking, chuy·ªÉn v·ªÅ trang ch·ªß
      router.push('/');
      return;
    }

    try {
      const parsedInfo = JSON.parse(storedBookingInfo);
      setBookingInfo(parsedInfo);
    } catch (error) {
      console.error('Error parsing booking info:', error);
      router.push('/');
      return;
    }

    setLoading(false);
  }, [router]);

  const getMethodDisplayName = (method: string) => {
    switch (method) {
      case 'direct_human':
        return 'Tr·ª±c ti·∫øp v·ªõi ng∆∞·ªùi th·∫≠t';
      case 'ai_interaction':
        return 'T∆∞∆°ng t√°c v·ªõi AI';
      case 'virtual_reality':
        return 'Th·ª±c t·∫ø ·∫£o (VR)';
      default:
        return method;
    }
  };

  const getMethodIcon = (method: string) => {
    switch (method) {
      case 'direct_human':
        return 'üë•';
      case 'ai_interaction':
        return 'ü§ñ';
      case 'virtual_reality':
        return 'ü•Ω';
      default:
        return 'üí¨';
    }
  };

  const formatDateTime = (dateString: string) => {
    const date = new Date(dateString);
    return {
      date: date.toLocaleDateString('vi-VN', {
        weekday: 'long',
        year: 'numeric',
        month: 'long',
        day: 'numeric'
      }),
      time: date.toLocaleTimeString('vi-VN', {
        hour: '2-digit',
        minute: '2-digit'
      })
    };
  };

  const handleStartOver = () => {
    // X√≥a t·∫•t c·∫£ th√¥ng tin trong localStorage
    localStorage.removeItem('whisper_room_client_id');
    localStorage.removeItem('whisper_room_method');
    localStorage.removeItem('booking_info');
    
    // Chuy·ªÉn v·ªÅ trang ch·ªß
    router.push('/');
  };

  if (loading) {
    return (
      <div className="bg-background min-h-screen flex items-center justify-center">
        <Card>
          <div className="text-center">
            <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-primary mx-auto mb-4"></div>
            <p>ƒêang t·∫£i th√¥ng tin...</p>
          </div>
        </Card>
      </div>
    );
  }

  if (!bookingInfo) {
    return (
      <div className="bg-background min-h-screen flex items-center justify-center">
        <Card>
          <div className="text-center">
            <h2 className="text-xl font-semibold text-gray-800 mb-4">
              Kh√¥ng t√¨m th·∫•y th√¥ng tin ƒë·∫∑t l·ªãch
            </h2>
            <Link href="/">
              <Button>V·ªÅ trang ch·ªß</Button>
            </Link>
          </div>
        </Card>
      </div>
    );
  }

  const { date, time } = formatDateTime(bookingInfo.slot.start_time);
  const endTime = formatDateTime(bookingInfo.slot.end_time).time;

  return (
    <div className="bg-background min-h-screen py-8">
      <div className="container-custom">
        {/* Success Header */}
        <div className="text-center mb-8">
          <div className="w-20 h-20 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-6">
            <span className="text-3xl text-white">‚úì</span>
          </div>
          <h1 className="text-3xl md:text-4xl font-bold text-gray-800 mb-4">
            ƒê·∫∑t l·ªãch th√†nh c√¥ng!
          </h1>
          <p className="text-lg text-gray-600 max-w-2xl mx-auto">
            C·∫£m ∆°n b·∫°n ƒë√£ tin t∆∞·ªüng Whisper Room. Ch√∫ng t√¥i ƒë√£ nh·∫≠n ƒë∆∞·ª£c y√™u c·∫ßu ƒë·∫∑t l·ªãch 
            v√† s·∫Ω s·ªõm li√™n h·ªá v·ªõi b·∫°n ƒë·ªÉ x√°c nh·∫≠n.
          </p>
        </div>

        {/* Booking Details */}
        <Card className="max-w-3xl mx-auto mb-8">
          <h2 className="text-2xl font-semibold text-gray-800 mb-6 text-center">
            Th√¥ng tin cu·ªôc h·∫πn
          </h2>

          <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
            {/* Date & Time */}
            <div className="text-center p-6 bg-blue-50 rounded-lg">
              <div className="text-3xl mb-3">üìÖ</div>
              <h3 className="font-semibold text-gray-800 mb-2">Th·ªùi gian</h3>
              <p className="text-gray-700 font-medium">{date}</p>
              <p className="text-primary font-bold text-lg">{time} - {endTime}</p>
            </div>

            {/* Method */}
            <div className="text-center p-6 bg-green-50 rounded-lg">
              <div className="text-3xl mb-3">{getMethodIcon(bookingInfo.method)}</div>
              <h3 className="font-semibold text-gray-800 mb-2">Ph∆∞∆°ng th·ª©c</h3>
              <p className="text-gray-700 font-medium">
                {getMethodDisplayName(bookingInfo.method)}
              </p>
            </div>
          </div>

          {/* Message */}
          {bookingInfo.message && (
            <div className="mt-6 p-4 bg-yellow-50 border border-yellow-200 rounded-lg">
              <h3 className="font-semibold text-gray-800 mb-2">Ghi ch√∫ c·ªßa b·∫°n:</h3>
              <p className="text-gray-700 italic">"{bookingInfo.message}"</p>
            </div>
          )}

          {/* Booking ID */}
          <div className="mt-6 text-center">
            <p className="text-sm text-gray-500">
              M√£ ƒë·∫∑t l·ªãch: <span className="font-mono font-semibold">WR-{bookingInfo.slot.id}</span>
            </p>
          </div>
        </Card>

        {/* Next Steps */}
        <Card className="max-w-3xl mx-auto mb-8">
          <h3 className="text-xl font-semibold text-gray-800 mb-4">C√°c b∆∞·ªõc ti·∫øp theo</h3>
          
          <div className="space-y-4">
            <div className="flex items-start">
              <div className="w-8 h-8 bg-primary text-white rounded-full flex items-center justify-center text-sm font-semibold mr-4 mt-1">
                1
              </div>
              <div>
                <h4 className="font-medium text-gray-800">X√°c nh·∫≠n t·ª´ ƒë·ªôi ng≈©</h4>
                <p className="text-gray-600 text-sm">
                  Ch√∫ng t√¥i s·∫Ω li√™n h·ªá v·ªõi b·∫°n trong v√≤ng 24 gi·ªù ƒë·ªÉ x√°c nh·∫≠n cu·ªôc h·∫πn v√† cung c·∫•p th√¥ng tin chi ti·∫øt.
                </p>
              </div>
            </div>

            <div className="flex items-start">
              <div className="w-8 h-8 bg-primary text-white rounded-full flex items-center justify-center text-sm font-semibold mr-4 mt-1">
                2
              </div>
              <div>
                <h4 className="font-medium text-gray-800">Chu·∫©n b·ªã cho bu·ªïi h·∫πn</h4>
                <p className="text-gray-600 text-sm">
                  H√£y chu·∫©n b·ªã tinh th·∫ßn tho·∫£i m√°i v√† suy nghƒ© v·ªÅ nh·ªØng v·∫•n ƒë·ªÅ b·∫°n mu·ªën chia s·∫ª.
                </p>
              </div>
            </div>

            <div className="flex items-start">
              <div className="w-8 h-8 bg-primary text-white rounded-full flex items-center justify-center text-sm font-semibold mr-4 mt-1">
                3
              </div>
              <div>
                <h4 className="font-medium text-gray-800">Tham gia phi√™n h·ªó tr·ª£</h4>
                <p className="text-gray-600 text-sm">
                  ƒê·∫øn ƒë√∫ng gi·ªù v√† t·∫≠n h∆∞·ªüng tr·∫£i nghi·ªám h·ªó tr·ª£ t√¢m l√Ω chuy√™n nghi·ªáp t·∫°i Whisper Room.
                </p>
              </div>
            </div>
          </div>
        </Card>

        {/* Important Information */}
        <div className="grid grid-cols-1 md:grid-cols-2 gap-6 max-w-4xl mx-auto mb-8">
          <Card className="bg-blue-50 border-blue-200">
            <h3 className="font-semibold text-blue-800 mb-3">üìû Li√™n h·ªá kh·∫©n c·∫•p</h3>
            <div className="text-sm text-blue-700 space-y-1">
              <p><strong>Email:</strong> whisperroom@hutech.edu.vn</p>
              <p><strong>ƒêi·ªán tho·∫°i:</strong> (028) 5445 7777</p>
              <p><strong>Gi·ªù h·ªó tr·ª£:</strong> 8:00 - 17:00 (T2-T6)</p>
            </div>
          </Card>

          <Card className="bg-green-50 border-green-200">
            <h3 className="font-semibold text-green-800 mb-3">üìã Ch√≠nh s√°ch h·ªßy/ƒë·ªïi l·ªãch</h3>
            <div className="text-sm text-green-700 space-y-1">
              <p>‚Ä¢ C√≥ th·ªÉ h·ªßy/ƒë·ªïi l·ªãch tr∆∞·ªõc 24 gi·ªù</p>
              <p>‚Ä¢ Li√™n h·ªá qua email ho·∫∑c ƒëi·ªán tho·∫°i</p>
              {/* <p>‚Ä¢ Kh√¥ng m·∫•t ph√≠ cho vi·ªác thay ƒë·ªïi</p> */}
            </div>
          </Card>
        </div>

        {/* Action Buttons */}
        <div className="text-center space-y-4">
          <div className="space-x-4">
            <Link href="/">
              <Button variant="outline" size="lg">
                V·ªÅ trang ch·ªß
              </Button>
            </Link>
            <Button onClick={handleStartOver} size="lg">
              ƒê·∫∑t l·ªãch m·ªõi
            </Button>
          </div>
          
          <p className="text-sm text-gray-500">
            B·∫°n c√≥ th·ªÉ l∆∞u trang n√†y ƒë·ªÉ tham kh·∫£o th√¥ng tin cu·ªôc h·∫πn
          </p>
        </div>

        {/* Thank You Message */}
        <Card className="mt-8 max-w-2xl mx-auto bg-gradient-to-r from-primary to-[#2d5aa0] text-white">
          <div className="text-center">
            <h3 className="text-xl font-semibold mb-3">C·∫£m ∆°n b·∫°n ƒë√£ tin t∆∞·ªüng!</h3>
            <p className="opacity-90">
              Whisper Room cam k·∫øt mang ƒë·∫øn cho b·∫°n tr·∫£i nghi·ªám h·ªó tr·ª£ t√¢m l√Ω t·ªët nh·∫•t. 
              Ch√∫ng t√¥i r·∫•t mong ƒë∆∞·ª£c ƒë·ªìng h√†nh c√πng b·∫°n tr√™n h√†nh tr√¨nh chƒÉm s√≥c s·ª©c kh·ªèe tinh th·∫ßn.
            </p>
          </div>
        </Card>
      </div>
    </div>
  );
}
