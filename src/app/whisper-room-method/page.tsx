'use client';

import { useState, useEffect } from 'react';
import { useRouter } from 'next/navigation';
import Button from '@/components/ui/Button';
import Card from '@/components/ui/Card';

type WhisperRoomType = 'direct_human' | 'ai_interaction' | 'virtual_reality';

interface MethodOption {
  id: WhisperRoomType;
  title: string;
  description: string;
  icon: string;
  features: string[];
  color: string;
}

export default function WhisperRoomMethodPage() {
  const [selectedMethod, setSelectedMethod] = useState<WhisperRoomType | null>(null);
  const [clientId, setClientId] = useState<string | null>(null);
  const router = useRouter();

  useEffect(() => {
    // Ki·ªÉm tra xem c√≥ client_id trong localStorage kh√¥ng
    const storedClientId = localStorage.getItem('whisper_room_client_id');
    if (!storedClientId) {
      // N·∫øu kh√¥ng c√≥ client_id, chuy·ªÉn h∆∞·ªõng v·ªÅ trang kh·∫£o s√°t
      router.push('/survey');
      return;
    }
    setClientId(storedClientId);
  }, [router]);

  const methods: MethodOption[] = [
    {
      id: 'direct_human',
      title: 'Tr·ª±c ti·∫øp v·ªõi ng∆∞·ªùi th·∫≠t',
      description: 'T∆∞∆°ng t√°c tr·ª±c ti·∫øp v·ªõi chuy√™n gia t√¢m l√Ω, nh·∫≠n ƒë∆∞·ª£c s·ª± h·ªó tr·ª£ c√° nh√¢n h√≥a v√† chuy√™n nghi·ªáp.',
      icon: 'üë•',
      features: [
        'T∆∞ v·∫•n chuy√™n s√¢u t·ª´ chuy√™n gia',
        'Ph·∫£n h·ªìi t·ª©c th√¨ v√† c√° nh√¢n h√≥a',
        'K·∫øt n·ªëi con ng∆∞·ªùi th·ª±c s·ª±',
        'M√¥i tr∆∞·ªùng an to√†n v√† ri√™ng t∆∞',
        'Ph∆∞∆°ng ph√°p tr·ªã li·ªáu truy·ªÅn th·ªëng'
      ],
      color: 'from-blue-500 to-blue-600'
    },
    {
      id: 'ai_interaction',
      title: 'T∆∞∆°ng t√°c v·ªõi AI',
      description: 'Tr√≤ chuy·ªán v·ªõi AI ƒë∆∞·ª£c hu·∫•n luy·ªán chuy√™n bi·ªát v·ªÅ t√¢m l√Ω h·ªçc sinh vi√™n',
      icon: 'ü§ñ',
      features: [
        // 'C√≥ s·∫µn 24/7, m·ªçi l√∫c m·ªçi n∆°i',
        'Kh√¥ng √°p l·ª±c x√£ h·ªôi',
        'Ph√¢n t√≠ch d·ªØ li·ªáu th√¥ng minh',
        'ƒê√°p ·ª©ng nhanh ch√≥ng',
        'B·∫£o m·∫≠t th√¥ng tin tuy·ªát ƒë·ªëi'
      ],
      color: 'from-green-500 to-green-600'
    },
    {
      id: 'virtual_reality',
      title: 'Th·ª±c t·∫ø ·∫£o (VR)',
      description: 'Tr·∫£i nghi·ªám m√¥i tr∆∞·ªùng ·∫£o ƒë∆∞·ª£c thi·∫øt k·∫ø ƒë·∫∑c bi·ªát ƒë·ªÉ gi·∫£m stress v√† lo √¢u hi·ªáu qu·∫£.',
      icon: 'ü•Ω',
      features: [
        'M√¥i tr∆∞·ªùng ·∫£o an to√†n',
        'Tr·∫£i nghi·ªám nh·∫≠p vai s√¢u s·∫Øc',
        'C√¥ng ngh·ªá hi·ªán ƒë·∫°i ti√™n ti·∫øn',
        'Li·ªáu ph√°p th∆∞ gi√£n t·ª± nhi√™n',
        'Hi·ªáu qu·∫£ gi·∫£m lo √¢u cao'
      ],
      color: 'from-purple-500 to-purple-600'
    }
  ];

  const handleMethodSelect = (method: WhisperRoomType) => {
    console.log('üéØ Method selected:', method);
    setSelectedMethod(method);
  };

  const handleContinue = () => {
    if (selectedMethod && clientId) {
      // L∆∞u ph∆∞∆°ng th·ª©c ƒë√£ ch·ªçn v√†o localStorage
      localStorage.setItem('whisper_room_method', selectedMethod);
      // Chuy·ªÉn ƒë·∫øn trang ƒë·∫∑t l·ªãch
      router.push('/booking');
    }
  };

  if (!clientId) {
    return (
      <div className="bg-background min-h-screen flex items-center justify-center">
        <Card>
          <div className="text-center">
            <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-primary mx-auto mb-4"></div>
            <p>ƒêang ki·ªÉm tra th√¥ng tin...</p>
          </div>
        </Card>
      </div>
    );
  }

  return (
    <div className="bg-background min-h-screen py-8">
      <div className="container-custom">
        {/* Header */}
        <div className="text-center mb-12">
          <h1 className="text-3xl md:text-4xl font-bold text-gray-800 mb-4">
            Ch·ªçn ph∆∞∆°ng th·ª©c tham gia Whisper Room
          </h1>
          <p className="text-lg text-gray-600 max-w-3xl mx-auto">
            C·∫£m ∆°n b·∫°n ƒë√£ ho√†n th√†nh kh·∫£o s√°t! B√¢y gi·ªù h√£y ch·ªçn ph∆∞∆°ng th·ª©c ph√π h·ª£p nh·∫•t 
            ƒë·ªÉ nh·∫≠n ƒë∆∞·ª£c s·ª± h·ªó tr·ª£ t√¢m l√Ω t·ª´ Whisper Room.
          </p>
        </div>

        {/* Method Options */}
        <div className="grid grid-cols-1 lg:grid-cols-3 gap-8 mb-8">
          {methods.map((method) => (
            <div
              key={method.id}
              className={`cursor-pointer transition-all duration-300 rounded-lg ${
                selectedMethod === method.id
                  ? 'ring-4 ring-primary ring-opacity-50 shadow-xl transform scale-105'
                  : 'hover:shadow-lg hover:transform hover:scale-102'
              }`}
              onClick={() => handleMethodSelect(method.id)}
              role="button"
              tabIndex={0}
              onKeyDown={(e) => {
                if (e.key === 'Enter' || e.key === ' ') {
                  e.preventDefault();
                  handleMethodSelect(method.id);
                }
              }}
            >
              <Card className="h-full border-2 border-transparent hover:border-primary/20 group">
              <div className="text-center">
                {/* Icon */}
                <div className={`w-24 h-24 bg-gradient-to-br ${method.color} rounded-full flex items-center justify-center mx-auto mb-6`}>
                  <span className="text-4xl text-white">{method.icon}</span>
                </div>

                {/* Title */}
                <h3 className="text-xl font-bold text-gray-800 mb-3">
                  {method.title}
                </h3>

                {/* Description */}
                <p className="text-gray-600 mb-6 leading-relaxed">
                  {method.description}
                </p>

                {/* Features */}
                <div className="text-left">
                  <h4 className="font-semibold text-gray-800 mb-3">ƒê·∫∑c ƒëi·ªÉm n·ªïi b·∫≠t:</h4>
                  <ul className="space-y-2">
                    {method.features.map((feature, index) => (
                      <li key={index} className="flex items-start text-sm text-gray-600">
                        <span className="text-green-500 mr-2 mt-0.5">‚úì</span>
                        {feature}
                      </li>
                    ))}
                  </ul>
                </div>

                {/* Selection/Hover Indicator */}
                <div className="mt-4">
                  {selectedMethod === method.id ? (
                    <div className="p-3 bg-primary text-white rounded-lg shadow-md">
                      <span className="text-sm font-medium flex items-center justify-center">
                        <span className="mr-2">‚úì</span>
                        ƒê√£ ch·ªçn
                      </span>
                    </div>
                  ) : (
                    <div className="p-3 border-2 border-gray-200 rounded-lg group-hover:border-primary group-hover:bg-primary group-hover:text-white transition-all duration-200">
                      <span className="text-sm font-medium flex items-center justify-center text-gray-500 group-hover:text-white">
                        Click ƒë·ªÉ ch·ªçn
                      </span>
                    </div>
                  )}
                </div>
              </div>
              </Card>
            </div>
          ))}
        </div>

        {/* Continue Button */}
        <div className="text-center">
          <Button
            size="lg"
            onClick={handleContinue}
            disabled={!selectedMethod}
            className={`px-8 py-4 min-w-[200px] ${!selectedMethod ? 'opacity-50 cursor-not-allowed' : ''}`}
          >
            {selectedMethod ? 'Ti·∫øp t·ª•c ƒë·∫∑t l·ªãch' : 'Vui l√≤ng ch·ªçn ph∆∞∆°ng th·ª©c'}
          </Button>
        </div>

        {/* Additional Info */}
        <Card className="mt-8 max-w-3xl mx-auto">
          <div className="text-center">
            <h3 className="font-semibold text-gray-800 mb-3">Th√¥ng tin quan tr·ªçng</h3>
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4 text-sm text-gray-600">
              <div>
                <strong>‚è∞ Th·ªùi gian:</strong> M·ªói phi√™n k√©o d√†i 45 ph√∫t
              </div>
              <div>
                <strong>üí∞ Chi ph√≠:</strong> Ho√†n to√†n mi·ªÖn ph√≠
              </div>
              <div>
                <strong>üìÖ L·ªãch l√†m vi·ªác:</strong> Th·ª© 2 - Th·ª© 6, 9:00 - 16:00
              </div>
              <div>
                <strong>üîí B·∫£o m·∫≠t:</strong> Th√¥ng tin ƒë∆∞·ª£c b·∫£o v·ªá tuy·ªát ƒë·ªëi
              </div>
            </div>
          </div>
        </Card>

        {/* Help Section */}
        <Card className="mt-6 max-w-2xl mx-auto bg-blue-50 border-blue-200">
          <div className="text-center">
            <h3 className="font-semibold text-blue-800 mb-2">C·∫ßn h·ªó tr·ª£ ch·ªçn ph∆∞∆°ng th·ª©c?</h3>
            <p className="text-sm text-blue-700 mb-3">
              N·∫øu b·∫°n kh√¥ng ch·∫Øc ch·∫Øn ph∆∞∆°ng th·ª©c n√†o ph√π h·ª£p, ƒë·ªôi ng≈© c·ªßa ch√∫ng t√¥i s·∫Ω t∆∞ v·∫•n mi·ªÖn ph√≠.
            </p>
            <div className="text-sm text-blue-600">
              üìß whisperroom@hutech.edu.vn | üìû (028) 5445 7777
            </div>
          </div>
        </Card>
      </div>
    </div>
  );
}
